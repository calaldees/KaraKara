# https://dev.to/faraixyz/converting-video-into-animated-images-using-ffmpeg-3cng
# https://lobste.rs/s/hjz9uo/avif_has_landed
#   rant about why av1 has not reached penetration yet
# https://darekkay.com/blog/avif-images/
# https://evilmartians.com/chronicles/better-web-video-with-av1-codec
#   video sourceset with codec in mime
# https://www.contentful.com/blog/2021/11/29/load-avif-webp-using-html/


# https://en.wikipedia.org/wiki/FFmpeg#Image_formats

# https://caniuse.com/?search=image%20format

# avifenc # https://github.com/AOMediaCodec/libavif/blob/master/apps/avifenc.c
# apk add libavif-apps (or something - search the alpine package repo)

ffmpeg -i Miku.mp4 -ss 15.0 -vframes 1 -an test.webp # 12k
ffmpeg -i Miku.mp4 -ss 15.0 -vframes 1 -an test.jpg # 22k
ffmpeg -i Miku.mp4 -ss 15.0 -vframes 1 -an test.png  # 250k
avifenc test.png test.avif # 13k



-vf scale=w='320:h=floor((320*(1/a))/2)*2'



# https://caniuse.com/?search=video%20gformat

# https://trac.ffmpeg.org/wiki/Encode/AV1
# https://trac.ffmpeg.org/wiki/Encode/VP9

#ffmpeg -i Miku.mp4 -c:v libaom-av1 -crf 30 -b:v 0 -strict experimental test.mp4
# slow as all fuck 0.3 fps

# needs special ffmpeg compile
#ffmpeg -i Miku.mp4 -c:v libsvtav1 -crf 30 -b:v 0 -strict experimental test.mp4
#ffmpeg -i Miku.mp4 -c:v librav1e -crf 30 -b:v 0 -strict experimental test.mp4

# Original 180mb

# docker run --rm -it --volume ${PWD}:/Downloads/:rw --entrypoint /bin/sh collelog/ffmpeg:4.4-alpine-amd64

ffmpeg -i Miku.mp4 -c:v libsvtav1 -crf 30 -b:v 0 -strict experimental test2.mp4
# 9mb

ffmpeg -i Miku.mp4 -c:v libvpx-vp9 -crf 30 -b:v 0 test2.webm
# 32mb?
ffmpeg -i Miku.mp4 -c:v libvpx-vp9 -crf 45 -b:v 0 test.webm
# 8.5mb?

ffmpeg -i Miku.mp4 -c:v libx264 -crf 30 -b:v 0 -strict experimental test.mp4
# 9mb




---



ffmpeg -i /media/source/Anime/Macross\ Dynamite7\ -\ OP\ -\ Dynamite\ Explosion.mkv -c:v libsvtav1 -b:v 0 -strict experimental /media/processed/av1_test.mp4

# https://askubuntu.com/questions/1189174/how-do-i-use-ffmpeg-and-rav1e-to-create-high-quality-av1-files
ffmpeg -i /media/source/Anime/Macross\ Dynamite7\ -\ OP\ -\ Dynamite\ Explosion.mkv -c:v librav1e -qp 80 -speed 4 -tile-columns 2 -tile-rows 2 -c:a libfdk_aac -b:a 128k -strict experimental /media/processed/av1_test.mp4
# https://www.mlug-au.org/lib/exe/fetch.php?media=av1_presentation.pdf
-c:a libopus -ac 2

ffmpeg -i input.mkv -c:v libsvtav1 -preset 4 -qp 30 -sc_detection true -pix_fmt yuv420p10le -g 240 -an -sn svt-av1.mkv

ffmpeg -i "${ff}" -c:v libsvtav1 -preset 4 -qp 50 -sc_detection true -pix_fmt yuv420p10le -g 240 -sn -c:a libopus -ac 2 svt-av1.webm


---

Original

#vcodec='libx264',
#crf=21,
#maxrate='1500k',
#bufsize='2500k',


---

VP9

# https://streaminglearningcenter.com/codecs/encoding-vp9-in-ffmpeg-an-update.html
# ver detailed breakdown of VP9 2 pass settings

export ff="/media/source/Anime/Macross Dynamite7 - OP - Dynamite Explosion.mkv"

ffmpeg -y -i "${ff}" -c:v libvpx-vp9 -pass 1 -b:v 600K -g 48 -keyint_min 48 -sc_threshold 0 -threads 8 -speed 4 -row-mt 1 -tile-columns 4 -an -f webm /dev/null \
&& \
ffmpeg -i "${ff}" -c:v libvpx-vp9 -pass 2 -b:v 600K -minrate 400K -maxrate 800K -g 48 -keyint_min 48 -sc_threshold 0 -row-mt 1 -threads 8 -speed 2 -tile-columns 4 output.webm

---

h265

https://trac.ffmpeg.org/wiki/Encode/H.265
https://codepen.io/cloudunder/post/hevc-html5-video

These are equivalent of the av1 filesizes

ffmpeg -i "${ff}" -c:v libx265 -crf 35 -preset slow -c:a aac -b:a 96k h265-crf35-a96k.mkv


ffmpeg -i "${ff}" -c:v libx265 -crf 39 -preset slow -c:a aac -b:a 24k -vf scale=w='320:h=floor((320*(1/a))/2)*2' -ac 1 h265-preview-crf39-a24k.mkv


---


            'encode_video_av1': cmd_args(
                # https://trac.ffmpeg.org/wiki/Encode/AV1
                # https://www.mlug-au.org/lib/exe/fetch.php?media=av1_presentation.pdf
                #qp=30 # was same size as x264 file (26mb) 1.4fps
                #qp=40 # was half the size and (slightly) better/comparable to old x264 (14mb) 2.4fps
                #qp=50 # (8.5mb) and good enough 3fps
                vcodec='libsvtav1',
                preset=4,
                qp=50,
                sc_detection='true',
                pix_fmt='yuv420p10le',
                g=240,
                sn=None,  # dont copy subtitles?
                acodec='libopus',
                ac=2,

                # old mp4 presets
                #vcodec='libx264',
                #crf=21,
                #maxrate='1500k',
                #bufsize='2500k',
                #acodec='aac',
                #ab='196k',

                # h265 equivalent of av1 (8.5mb)
                #vcodec='libx265',
                #crf=35,
                #preset='slow',
                #acodec='aac',
                #ab='96k',  # maybe 128k would be better
            ),
            'encode_preview_av1': cmd_args(
                vf=self.config['vf_for_preview'],

                # av1 == 1.2mb (still better than mp4 at 2.4mb)
                vcodec='libsvtav1',
                preset=4,
                qp=60,
                sc_detection='true',
                pix_fmt='yuv420p10le',
                g=240,
                acodec='libopus',
                ab='24k',

                # original mp4 2.4mb and garbage + underwater
                #vcodec='libx264',  # TOOO: preview should encode in multiple formats av1 + mp4
                #crf=34,
                #acodec='aac',  # libfdk_aac
                #ab='48k',

                #h265 equivalent of av1 for filesize (1.2mb)
                #vcodec='libx265',
                #crf=39,
                #preset='slow',
                #acodec='aac',
                #ab='24k',
                #ac=1, # unsure if this helps
            ),