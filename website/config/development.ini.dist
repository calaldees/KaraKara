# Application ------------------------------------------------------------------
[app:main]
use = egg:KaraKara

# Pyramid ----------------------------------------------------------------------
pyramid.reload_templates    = true
pyramid.debug_authorization = false
pyramid.debug_notfound      = false
pyramid.debug_routematch    = false
pyramid.debug_templates     = true
pyramid.includes =
    pyramid_tm
    #pyramid_debugtoolbar


# i18n -------------------------------------------------------------------------
pyramid.default_locale_name = en
i18n.translation_dirs = ../data/locale
i18n.available_languages = [en]

# Karaoke settings -------------------------------------------------------------
karakara.server.mode = development
karakara.server.postmortem = False -> bool

karakara.template.title = KaraKara (Dev)

karakara.faves.enabled                         = False -> bool
karakara.websocket.host = websocket

karakara.search.view.config = data/config/search_config.json


# Community ---------------------------------------------------------------------

community.title = KaraKara.org.uk

upload.route.uploaded = /uploaded/
upload.path = data/upload/


# API --------------------------------------------------------------------------

api.format.default = html
api.search.max_age = 0 -> int

# Static Assets ----------------------------------------------------------------
static.assets = karakara/static
static.externals = data/externals/static
static.player = ../player
static.player2 = ../player2/dist

static.path.source = 
static.path.meta = 
static.path.processed = 
static.processmedia2.log = ../processmedia2/logs/processmedia.log
static.backup = data/backup

#static.assets = http://staticserver.com/


# Database ---------------------------------------------------------------------
sqlalchemy.url = sqlite:///data/database/test.db

# Sessions ---------------------------------------------------------------------
session.cookie_name          = karakara_session
session.secret               = cockNroll
session.salt                 = pyramid.session.
session.timeout              = 86400 -> int
#session.max_age              = 86400 -> int
session.reissue_time         = None -> None

# Templates --------------------------------------------------------------------
mako.directories = karakara:templates

# Login Providers --------------------------------------------------------------

login.automatically_activate_with_single_provider = False -> bool

login.facebook.appid =
login.facebook.secret = 
login.facebook.permissions = public_profile

login.google.clientid =
login.google.client_secret_file =

login.provider.enabled = []

# Cache ------------------------------------------------------------------------

cache.backend = dogpile.cache.memory
cache.backend.arguments = {}


# Python Server ----------------------------------------------------------------
server.gzip         = False -> bool
server.etag.enabled = False -> bool
server.etag.expire  = day
server.etag.cache_buster = 
server.max_age.default = 0 -> int
server.url = 

# Server -----------------------------------------------------------------------
[server:main]
use = egg:waitress#main
host = 0.0.0.0
port = 6543

# Logging -----------------------------------------------------------------------

[loggers]
keys = root, sqlalchemy, karakara, externals, admindashboard

[handlers]
keys = console, logfile, admindashboard

[formatters]
keys = generic, message_only

# Loggers -------------------

[logger_root]
level = INFO
handlers = console

[logger_karakara]
level = DEBUG
handlers =
qualname = karakara

[logger_externals]
level = DEBUG
handlers =
qualname = externals

[logger_sqlalchemy]
level = WARN
handlers =
qualname = sqlalchemy.engine
# "level = INFO" logs SQL queries.
# "level = DEBUG" logs SQL queries and results.
# "level = WARN" logs neither.  (Recommended for production systems.)

# Log Handlers --------------

[handler_console]
class = StreamHandler
args = (sys.stderr,)
level = NOTSET
formatter = generic

[handler_logfile]
class = FileHandler
args = ('data/logs/development.log',)
level = NOTSET
formatter = generic

[formatter_generic]
format = %(asctime)s %(levelname)-5.5s [%(name)s][%(threadName)s] %(message)s

[formatter_message_only]
format = %(message)s

# Admin Dashboard Logging -------------

[logger_admindashboard]
level = INFO
handlers = admindashboard
qualname = json_log_event

[handler_admindashboard]
class = FileHandler
args = ('data/logs/admindashboard_events.log',)
level = NOTSET
formatter = message_only
