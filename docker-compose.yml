version: '3.5'

volumes:
    website_db:
    processmedia2_data:

services:

    website:
        build:
            context: ./website
            dockerfile: Dockerfile
        env_file:
            - .env
        links:
            - postgres
        #volumes:
            #- ./:${PATH_CONTAINER_REPO}:ro
            #- ${PATH_HOST_MEDIA}:${PATH_CONTAINER_MEDIA}:ro
            #- ${PATH_HOST_source}:${PATH_CONTAINER_MEDIA}/source:ro  # The Community interface writes to this location, not too happy about this. Will discuss this with content creators.
            #- ${LOGIN_GOOGLE_CLIENT_SECRET_FILE}:${LOGIN_GOOGLE_CLIENT_SECRET_FILE}:ro

    player2:
        build:
            context: ./player2
            dockerfile: Dockerfile

    postgres:
        image: postgres:9-alpine
        volumes:
            - website_db:/var/lib/postgresql
            - ./docker/postgres:/docker-entrypoint-initdb.d:ro

    nginx:
        build:
            context: ./nginx
            dockerfile: Dockerfile
        env_file:
            - .env
        ports:
            - "127.0.0.1:${PORT_NGINX}:80"
        volumes:
            - ${PATH_HOST_processed}:/media/processed:rw
        links:
            - website
            - player2

    processmedia2:
        build:
            context: ./processmedia2
            dockerfile: Dockerfile
        links:
            - website
        env_file:
            - .env
        volumes:
            #- ./processmedia2:/processmedia2:ro
            - processmedia2_data:/processmedia2/data
            - ${PATH_HOST_source}:${PATH_CONTAINER_MEDIA}/source:ro
            - ${PATH_HOST_meta}:${PATH_CONTAINER_MEDIA}/meta:rw
            - ${PATH_HOST_processed}:${PATH_CONTAINER_MEDIA}/processed:rw
        environment:
            KARAKARA_PROCESSMEDIA2_ENABLED: ${KARAKARA_PROCESSMEDIA2_ENABLED:-true}
            KARAKARA_RESCAN_INTERVAL_SECONDS: 600
            KARAKARA_PROCESSMEDIA2_CONFIG: config.docker.json
            KARAKARA_PROCESSMEDIA2_CLEANUP: 'false'
            KARAKARA_CONTAINER_NAME_website: 'website'
        command: ./docker-compose.yml.processmedia2.sh
        # command: [
        #   'pytest',
        #   'processmedia_libs',
        #   'tests',
        #   '--doctest-modules',
        #   '--pdb',
        #   '-x',
        #   #'-k', 'test_get_image_from_video'
        # ]
        #command: ['make', 'test']

# docker-compose run --rm processmedia2 bash
# docker run -it --rm --entrypoint bash -v //C//Users/calal/code/personal/KaraKara/processmedia2/tests/source:/tmp/workdir jrottenberg/ffmpeg
