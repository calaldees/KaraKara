version: '3.5'

volumes:
    website_db:
    website_data_1:
    website_data_2:
    processmedia2_data:

services:

    website:
        build:
            context: ./website
            dockerfile: Dockerfile
        env_file:
            - .env
        expose:
            - ${PORT_WEBSITE}
        ports:
            - ${KARAKARA_WEBSOCKET_PORT}:${KARAKARA_WEBSOCKET_PORT}
            #- ${PORT_WEBSITE}:${PORT_WEBSITE}
        environment:
            - PORT_WEBSITE
            - KARAKARA_WEBSOCKET_PORT
        links:
            - postgres
        #volumes:
            #- ./:${PATH_CONTAINER_REPO}:ro
            #- ${PATH_HOST_MEDIA}:${PATH_CONTAINER_MEDIA}:ro
            #- ${PATH_HOST_source}:${PATH_CONTAINER_MEDIA}/source:ro  # The Community interface writes to this location, not too happy about this. Will discuss this with content creators.
            #- website_data_1:${PATH_CONTAINER_WEBSITE}/data:rw
            #- website_data_2:${PATH_CONTAINER_WEBSITE}/KaraKara.egg-info:rw
            #- ${LOGIN_GOOGLE_CLIENT_SECRET_FILE}:${LOGIN_GOOGLE_CLIENT_SECRET_FILE}:ro
            #- ./production.inidiff:${PATH_CONTAINER_WEBSITE}/data/config/production.inidiff:ro  # Use .env vars with KARAKARA_SETTINGS_KEY=[00:01:00, 00:02:00] -> timedelta instead

    player2:
        build:
            context: ./player2
            dockerfile: Dockerfile

    postgres:
        image: postgres:9-alpine
        volumes:
            - website_db:/var/lib/postgresql
            - ./docker/postgres:/docker-entrypoint-initdb.d:ro

    nginx:
        image: nginx:mainline-alpine
        environment:
            - PORT_NGINX
            - PORT_WEBSITE
        env_file:
            - .env
        ports:
            - "${PORT_NGINX}:${PORT_NGINX}"
        volumes:
            - ./docker/nginx.conf:/tmp/nginx.conf:ro
            #- ./:${PATH_CONTAINER_REPO}:ro
            - ${PATH_HOST_source}:${PATH_CONTAINER_MEDIA}/source:ro
            - ${PATH_HOST_meta}:${PATH_CONTAINER_MEDIA}/meta:rw
            - ${PATH_HOST_processed}:${PATH_CONTAINER_MEDIA}/processed:rw
            #- website_data_1:${PATH_CONTAINER_WEBSITE}/data:ro
        links:
            - website
            - player2
        command: /bin/sh -c "DOLLAR='$$' envsubst < /tmp/nginx.conf > /etc/nginx/nginx.conf && nginx -g 'daemon off;'"

    processmedia2:
        build:
            context: docker/processmedia2
            dockerfile: processmedia2.base.dockerfile
        links:
            - website
        env_file:
            - .env
        volumes:
            - ./processmedia2:/processmedia2:ro
            - processmedia2_data:/processmedia2/data
            - ${PATH_HOST_source}:${PATH_CONTAINER_MEDIA}/source:ro
            - ${PATH_HOST_meta}:${PATH_CONTAINER_MEDIA}/meta:rw
            - ${PATH_HOST_processed}:${PATH_CONTAINER_MEDIA}/processed:rw
        environment:
            KARAKARA_PROCESSMEDIA2_ENABLED: ${KARAKARA_PROCESSMEDIA2_ENABLED:-true}
            KARAKARA_RESCAN_INTERVAL_SECONDS: 600
            KARAKARA_PROCESSMEDIA2_CONFIG: config.docker.json
            KARAKARA_PROCESSMEDIA2_CLEANUP: 'false'
            KARAKARA_CONTAINER_NAME_website: 'website'
        command: ./docker-compose.yml.processmedia2.sh
        # command: [
        #   'pytest',
        #   'processmedia_libs',
        #   'tests',
        #   '--doctest-modules',
        #   '--pdb',
        #   '-x',
        #   #'-k', 'test_get_image_from_video'
        # ]
        #command: ['make', 'test']

# docker-compose run --rm processmedia2 bash
# docker run -it --rm --entrypoint bash -v //C//Users/calal/code/personal/KaraKara/processmedia2/tests/source:/tmp/workdir jrottenberg/ffmpeg
