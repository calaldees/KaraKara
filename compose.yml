networks:
    default:
        name: karakara_default
        external: ${EXTERNAL_NETWORK}

services:

    frontend:
        image: caddy:2-alpine
        restart: unless-stopped
        mem_limit: 1g
        ports:
            - "127.0.0.1:${PORT_NGINX}:80"
        volumes:
            - ${PATH_HOST_data}/logs:/logs
            - ${PATH_HOST_data}/queues:/data/queue/:ro
            - ${PATH_HOST_processed}:/media/processed:ro
            - ${PWD}/tools/:/static/tools/:ro
            - ${PWD}/frontend/:/etc/caddy/
        links:
            - api_queue
            - mqtt
            - player3
            - browser3
            - upload
        labels:
            - "traefik.enable=true"
            - "traefik.http.routers.karakara.rule=Host(`${HOSTNAME}`)"
            - "traefik.http.routers.karakara.middlewares=kkredir"
            - "traefik.http.middlewares.kkredir.redirectregex.regex=^https://karakara.uk/$$"
            - "traefik.http.middlewares.kkredir.redirectregex.replacement=https://karakara.uk/browser3/"

    api_queue:
        build:
            context: ./api_queue
        restart: unless-stopped
        mem_limit: 1g
        environment:
            SANIC_MQTT: mqtt
            SANIC_PATH_TRACKS: /media/processed/tracks.json  # TODO: same as `processmedia2/config.docker.json` - consider from ENV?
            SANIC_PATH_QUEUE: /data/queue/   # See volumes below
            SANIC_PROXIES_COUNT: 1
            SANIC_REAL_IP_HEADER: x-real-ip
        #ports:  # for local dev
        #    - 8000:8000
        links:
            - mqtt
        volumes:
            - ${PATH_HOST_processed}:/media/processed:ro
            - ${PATH_HOST_data}/logs:/logs
            - ${PATH_HOST_data}/queues:/data/queue/:rw
            #- ${PWD}/api_queue/:/app/:ro   # local dev testing only

    mqtt:
        image: eclipse-mosquitto
        restart: unless-stopped
        mem_limit: 1g
        volumes:
            - ${PATH_HOST_data}/mqtt:/mosquitto/data
            - ${PWD}/mqtt/:/mosquitto/config/:ro

    player3:
        build:
            context: ./player3
        restart: unless-stopped
        mem_limit: 1g

    browser3:
        build:
            context: ./browser3
        restart: unless-stopped
        mem_limit: 1g

    processmedia3:
        profiles:
            - processmedia3
        build:
            context: ./processmedia3
        restart: unless-stopped
        mem_limit: 8g
        volumes:
            - ${PATH_HOST_data}/logs:/logs
            - ${PATH_HOST_source}:/media/source:ro
            - ${PATH_HOST_processed}:/media/processed:rw

    syncthing:
        profiles:
            - syncthing
        image: syncthing/syncthing
        restart: unless-stopped
        mem_limit: 1g
        cpu_count: 1
        hostname: karakara
        environment:
            PUID: 1002
            PGID: 1003
            UMASK: 002
        volumes:
            - ${PATH_HOST_data}/syncthing:/var/syncthing
            - ${PATH_HOST_source}:/media/source
            - ${PATH_HOST_processed}:/media/processed
        ports:
            - 127.0.0.1:8384:8384 # Web UI
            - 22000:22000/tcp # TCP file transfers
            - 22000:22000/udp # QUIC file transfers
            - 21027:21027/udp # Receive local discovery broadcasts

    test_cypress:
        profiles:
            - cypress
        image: cypress/included:10.8.0
        working_dir: /tests
        volumes:
            # USER passthrough
            - /etc/passwd:/etc/passwd:ro
            - /etc/group:/etc/group:ro
            # mount tests - readonly
            - ${PWD}/test_cypress/cypress.config.js:/tests/cypress.config.js:ro
            - ${PWD}/test_cypress/cypress:/tests/cypress:ro
            # mount reports - writeable
            - ${PWD}/test_cypress/reports:/tests/reports:rw
        entrypoint: ["cypress"]
        command: ["run"]

        #
        #links:
        #    - nginx
        #environment:
          #- DISPLAY
          #- CYPRESS_BASE_URL=http://client:8001/?api=http://server:8000
        #user: ${USER}  # ummm, problems with user on cypress startup

    upload:
        build:
            context: ./upload
        restart: unless-stopped
        mem_limit: 1g
        volumes:
            - ${PATH_HOST_source}/WorkInProgress/Incoming:/uploads:rw
            - ${PATH_HOST_data}/logs:/logs
